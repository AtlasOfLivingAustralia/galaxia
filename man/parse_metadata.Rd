% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_metadata.R
\name{parse_metadata}
\alias{parse_metadata}
\alias{parse_as_md}
\alias{parse_as_tibble}
\alias{parse_as_list}
\alias{parse_as_xml}
\title{Parse metadata between common object types}
\usage{
parse_metadata(x, to = c("tibble", "list", "xml", "md"))

parse_as_md(x)

parse_as_tibble(x)

parse_as_list(x)

parse_as_xml(x)
}
\arguments{
\item{x}{The object to be parsed. Should be one of class \code{character} (md),
\code{data.frame} (tibbles), \code{list} or \code{xml_document}.}

\item{to}{(string) What format should \code{x} be parsed to? Defaults to \code{tibble}.}
}
\description{
It is important in \code{galaxias} to be able to move between metadata statements
stored as strings, \code{tibble}s, \code{list}s, and \code{xml} documents. Primarily called
by \code{parse_metadata()}, and ultimately \code{read_md()} and \code{write_md()}, these
functions are exported for clarity and debugging purposes.
}
\details{
In practice, the sequence of transformations is fixed, being \code{string} >
\code{tibble} > \code{list} > \code{xml} for import from markdown, and the reverse for
export. Nonetheless, it can be useful sometimes to have helper functions that
handle this hierarchy 'under the hood'.

Note that parsing between tibbles and lists depends on recursive functions,
and are highly bespoke to the galaxias workflow. We use \code{xml2::as_list()} to
convert from xml to list, and \code{xml2::as_xml_document()} for the reverse.
}
