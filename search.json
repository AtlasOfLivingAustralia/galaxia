[{"path":"https://galaxias.ala.org.au/articles/quick_start_guide.html","id":"start-a-new-project","dir":"Articles","previous_headings":"","what":"Start a new project","title":"Quick start guide","text":"start new data project using galaxias, call: using RStudio, launch new RStudio instance project, following structure: good idea write basic information README.Rmd file first, provides guidance users package contains, well allowed use .","code":"library(galaxias) galaxias_project(\"myprojectname\") ├── README.md                        : Description of the repository ├── metadata.md                      : Boilerplate metadata statement for this project ├── projectname.Rproj                : RStudio project file ├── data-raw                         : Folder to store source data └── data                             : Folder to store processed data"},{"path":"https://galaxias.ala.org.au/articles/quick_start_guide.html","id":"adding-data-to-your-project","dir":"Articles","previous_headings":"","what":"Adding data to your project","title":"Quick start guide","text":"recommend first add data data-raw folder, use script within folder manipulate Darwin Core format. Let’s assume, example, data looks like : (Note normally ’d import data external file (e.g. using readr::read_csv()), ’ve constructed one example purposes.) recommend using functions corella package converting tibbles Darwin Core. corella automatically loaded load galaxias. minimally complete set formatted observations might look like : Note deliberately includes redundancy. coordinate data useful , example, case ambiguity useful specify text string given information location. Similarly, scientificName field sufficient identify taxon question, adding higher taxonomic information makes identification less ambiguous. saved tibble object Darwin Core-specific name, can subset Darwin Core terms, save using write_csv() data already Darwin Core format, can simply place data folder. can use build_schema() create ‘schema’ file, xml document tells users data present archive.","code":"library(tibble)  df <- tibble(   latitude = c(-35.310, -35.273),   longitude = c(149.125, 149.133),   date = c(\"14-01-2023\", \"15-01-2023\"),   time = c(\"10:23\", \"11:25\"),   species = c(\"Callocephalon fimbriatum\", \"Eolophus roseicapilla\")) library(lubridate)  occurrences <- df |>   # basic requirements of Darwin Core   use_occurrences(occurrenceID = sequential_id(),                   basisOfRecord = \"humanObservation\") |>    # place and time   use_coordinates(decimalLatitude = latitude,                    decimalLongitude = longitude) |>   use_locality(country = \"Australia\",                 locality = \"Canberra\") |>   use_datetime(eventDate = lubridate::dmy(date),                eventTime = lubridate::hm(time)) |>   # taxonomy   use_scientific_name(scientificName = species,                        taxonRank = \"species\") |>   use_taxonomy(kingdom = \"Animalia\",                 phylum = \"Aves\") print(occurrences, n = 5) ## # A tibble: 2 × 12 ##   basisOfRecord   occurrenceID decimalLatitude decimalLongitude country locality ##   <chr>           <chr>                  <dbl>            <dbl> <chr>   <chr>    ## 1 humanObservati… 01                     -35.3             149. Austra… Canberra ## 2 humanObservati… 02                     -35.3             149. Austra… Canberra ## # ℹ 6 more variables: eventDate <date>, eventTime <Period>, ## #   scientificName <chr>, taxonRank <chr>, kingdom <chr>, phylum <chr> library(readr) occurrences |>   select(any_of(occurrence_terms())) |>   write_csv(\".data/occurrences.csv\")"},{"path":"https://galaxias.ala.org.au/articles/quick_start_guide.html","id":"adding-package-metadata","dir":"Articles","previous_headings":"","what":"Adding package metadata","title":"Quick start guide","text":"critical part Darwin Core archive metadata statement; tells users owns data, data collected , uses can put (.e. data licence). get example statement, call use_metadata() creates blank statement called ‘metadata.md’, looks like : editted statement reflect information want convey, can convert EML using: second piece metadata required Darwin Core standard ‘schema’ document. machine-readable xml document describes content archive’s data files. can generate one using:","code":"use_metadata() ## ## Dataset ##   ##  ### Title ##   ##  A Sentence Giving Your Dataset Title In Title Case ##   ##  ### Abstract ##   ##  A paragraph outlining the content of the dataset ##   ##  ### Creator ##   ##  #### Individual name build_metadata() build_schema()"},{"path":"https://galaxias.ala.org.au/articles/quick_start_guide.html","id":"build-an-archive","dir":"Articles","previous_headings":"","what":"Build an archive","title":"Quick start guide","text":"end process, folder named data contains least three files: One .csv files containing data meta.xml file containing schema eml.xml file containing metadata true, can run build_archive() zip data Darwin Core Archive:","code":"build_archive()"},{"path":"https://galaxias.ala.org.au/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Westgate. Author, maintainer. Shandiya Balasubramanium. Author. Dax Kellie. Author.","code":""},{"path":"https://galaxias.ala.org.au/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Westgate M, Balasubramanium S, Kellie D (2024). galaxias: Describe, Package Share Biodiversity Data. R package version 0.1.0, https://galaxias.ala.org.au.","code":"@Manual{,   title = {galaxias: Describe, Package and Share Biodiversity Data},   author = {Martin Westgate and Shandiya Balasubramanium and Dax Kellie},   year = {2024},   note = {R package version 0.1.0},   url = {https://galaxias.ala.org.au}, }"},{"path":[]},{"path":"https://galaxias.ala.org.au/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Describe, Package and Share Biodiversity Data","text":"galaxias R package helps users describe, package share biodiversity information using ‘Darwin Core’ data standard. created Science & Decision Support Team Atlas Living Australia (ALA). package named genus freshwater fish found Southern Hemisphere, predominantly Australia New Zealand. comments, questions suggestions, please contact us.","code":""},{"path":"https://galaxias.ala.org.au/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Describe, Package and Share Biodiversity Data","text":"package active development, yet available CRAN. can install latest development version GitHub : Load package:","code":"install.packages(\"remotes\") remotes::install_github(\"atlasoflivingaustralia/galaxias\") library(galaxias)"},{"path":"https://galaxias.ala.org.au/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Describe, Package and Share Biodiversity Data","text":"galaxias contains tools : Create new RStudio project package storing biodiversity data data-processing scripts using galaxias_project(). Create documents describe origin structure data using build_metadata() build_schema(). Zip data sharing publication using build_archive(). Check data consistency Darwin Core standard, either locally using check_archive(), via API using validate_archive(). galaxias part group packages help users publish data using Darwin Core standard. packages : corella converting tibbles required column names paperbark converting markdown files xml.","code":""},{"path":"https://galaxias.ala.org.au/index.html","id":"citing-galaxias","dir":"","previous_headings":"","what":"Citing galaxias","title":"Describe, Package and Share Biodiversity Data","text":"generate citation package version using, can run: current recommended citation : Westgate MJ, Balasubramaniam S & Kellie D (2024) galaxias: Standardise, Document Share Biodiversity Data. R Package version 0.1.0.9999.","code":"citation(package = \"galaxias\")"},{"path":"https://galaxias.ala.org.au/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Describe, Package and Share Biodiversity Data","text":"Developers contributed galaxias listed (alphabetical order surname): Amanda Buyan (@acbuyan), Fonti Kar (@fontikar), Peggy Newman (@peggynewman) & Andrew Schwenke (@andrew-1234)","code":""},{"path":"https://galaxias.ala.org.au/reference/build_archive.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Darwin Core Archive from a folder — build_archive","title":"Build a Darwin Core Archive from a folder — build_archive","text":"Darwin Core archive zip file specified combination data metadata. function assumes file types pre-constructed, can found inside single folder, additional redundant information. function similar devtools::build(), sense takes repository wraps publication, differs devtools::build() builds Darwin Core Archive, rather R package.","code":""},{"path":"https://galaxias.ala.org.au/reference/build_archive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Darwin Core Archive from a folder — build_archive","text":"","code":"build_archive(source = \"data\", destination)"},{"path":"https://galaxias.ala.org.au/reference/build_archive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Darwin Core Archive from a folder — build_archive","text":"source (string) directory containing files stored archive. Defaults data folder within current working directory. destination (string) file name save resulting zip file.","code":""},{"path":"https://galaxias.ala.org.au/reference/build_archive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Darwin Core Archive from a folder — build_archive","text":"Invisibly returns location built zip file; typically called side-effect building 'Darwin Core Archive' (.e. zip file).","code":""},{"path":"https://galaxias.ala.org.au/reference/build_archive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a Darwin Core Archive from a folder — build_archive","text":"function looks three types objects specified directory: One csv files occurrences.csv &/events.csv. manipulated versions raw dataset, altered use Darwin Core terms column headers. See corella::corella-package() details. metadata statement, stored EML using filename eml.xml. function use_metadata() good starting point , followed build_metadata() populated metadata statement. 'schema' document, also stored xml, called meta.xml. usually constructed using build_schema(). get error files present. resulting file shares name working directory (.zip file extension), placed parent directory","code":""},{"path":"https://galaxias.ala.org.au/reference/build_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a metadata statement for a Darwin Core Archive — build_metadata","title":"Create a metadata statement for a Darwin Core Archive — build_metadata","text":"metadata statement lists owner dataset, collected, can used (.e. ' licence). function simply reads converts metadata stored markdown file, converts xml, saves destination file.","code":""},{"path":"https://galaxias.ala.org.au/reference/build_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a metadata statement for a Darwin Core Archive — build_metadata","text":"","code":"build_metadata(source = \"metadata.md\", destination = \"./data/eml.xml\")"},{"path":"https://galaxias.ala.org.au/reference/build_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a metadata statement for a Darwin Core Archive — build_metadata","text":"source metadata file stored markdown format (.md). Defaults metadata.md, created use_metdata() destination file result saved. Defaults data/eml.xml.","code":""},{"path":"https://galaxias.ala.org.au/reference/build_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a metadata statement for a Darwin Core Archive — build_metadata","text":"return object workspace; called side effect building file named meta.xml data directory.","code":""},{"path":"https://galaxias.ala.org.au/reference/build_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a metadata statement for a Darwin Core Archive — build_metadata","text":"function fairly shallow wrapper top functionality build paperbark package, particularly read_md() write_eml(). can use package gain greater control, debug problems, wish.","code":""},{"path":"https://galaxias.ala.org.au/reference/build_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a schema for a Darwin Core Archive — build_schema","title":"Create a schema for a Darwin Core Archive — build_schema","text":"schema xml document maps files field names DwCA. works detecting column names csv files specified directory; Darwin Core terms function produce reliable results.","code":""},{"path":"https://galaxias.ala.org.au/reference/build_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a schema for a Darwin Core Archive — build_schema","text":"","code":"build_schema(source = \"data\", destination = \"./data/meta.xml\")"},{"path":"https://galaxias.ala.org.au/reference/build_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a schema for a Darwin Core Archive — build_schema","text":"source directory (file) containing files documented schema document. Defaults data folder within current working directory. Note files match Darwin Core naming convention /end .csv ignored. destination file name resulting schema document. Defaults ./data/meta.xml consistency Darwin Core standard.","code":""},{"path":"https://galaxias.ala.org.au/reference/build_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a schema for a Darwin Core Archive — build_schema","text":"return object workspace; called side effect building file named meta.xml specified directory.","code":""},{"path":"https://galaxias.ala.org.au/reference/check_archive.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an archive against Darwin Core standards — check_archive","title":"Check an archive against Darwin Core standards — check_archive","text":"wrapper two packages; schema EML files (.e. xml) checked paperbark package; csv files checked corella package.","code":""},{"path":"https://galaxias.ala.org.au/reference/check_archive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an archive against Darwin Core standards — check_archive","text":"","code":"check_archive(x = \"data\")"},{"path":"https://galaxias.ala.org.au/reference/check_archive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an archive against Darwin Core standards — check_archive","text":"x (string) directory containing files published, optionally .zip file built (.e. build_archive()). Defaults data folder within current working directory.","code":""},{"path":"https://galaxias.ala.org.au/reference/check_archive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an archive against Darwin Core standards — check_archive","text":"Invisibly returns tibble workspace containing check results; primarily called side-effect generating report console.","code":""},{"path":[]},{"path":"https://galaxias.ala.org.au/reference/galaxias-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Build repositories to share biodiversity data — galaxias-package","title":"Build repositories to share biodiversity data — galaxias-package","text":"galaxias helps users describe, package share biodiversity information using 'Darwin Core' data standard, format used accepted Global Biodiversity Information Facility (GBIF) ' partner nodes. functionally similar devtools, focus building Darwin Core Archives rather R packages. package named genus freshwater fish.","code":""},{"path":"https://galaxias.ala.org.au/reference/galaxias-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Build repositories to share biodiversity data — galaxias-package","text":"questions, comments suggestions, please email support@ala.org.au. Set project galaxias_project() Set project necessary folder structure use_metadata() Add blank metadata statement working directory suggest_workflow() Advise configuring tibble Darwin Core standard Construct archive build_schema() Build schema file (meta.xml) given directory build_metadata() Convert metadata file markdown EML (eml.xml) build_archive() Convert directory Darwin Core Archive Validate archive check_archive() Check archive using paperbark corella packages galaxias_config() Store credentials API call validate_archive() Check archive using GBIF 'validator' API print_validation() Methods displaying API responses","code":""},{"path":[]},{"path":"https://galaxias.ala.org.au/reference/galaxias-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build repositories to share biodiversity data — galaxias-package","text":"Maintainer: Martin Westgate martin.westgate@csiro.au Authors: Shandiya Balasubramanium shandiya.balasubramanium@csiro.au Dax Kellie dax.kellie@csiro.au","code":""},{"path":"https://galaxias.ala.org.au/reference/galaxias_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide configuration information to galaxias — galaxias_config","title":"Provide configuration information to galaxias — galaxias_config","text":"validate (future, publish) dataset, need provide credentials relevant web service. function allows store information access galaxias API functions.","code":""},{"path":"https://galaxias.ala.org.au/reference/galaxias_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide configuration information to galaxias — galaxias_config","text":"","code":"galaxias_config(gbif)  # S3 method for class 'galaxias_config' print(x, ...)"},{"path":"https://galaxias.ala.org.au/reference/galaxias_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide configuration information to galaxias — galaxias_config","text":"gbif list containing entries username, email password x object class galaxias_config, created galaxias_config(). ... Additional arguments, currently ignored.","code":""},{"path":"https://galaxias.ala.org.au/reference/galaxias_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provide configuration information to galaxias — galaxias_config","text":"Note unlike galah, set 'default' provider galaxias; organisation always argument function question. Also unlike galah, galaxias_config() enables store configuration details multiple organisations . Currently, function useful validate_archive(), validating via GBIF.","code":""},{"path":"https://galaxias.ala.org.au/reference/galaxias_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new galaxias project — galaxias_project","title":"Create a new galaxias project — galaxias_project","text":"wrapper usethis functions create_project() create_package(). differs builds requisite folders \"data_raw\" 'initial' data, \"data\" data formatted according Darwin Core standard.","code":""},{"path":"https://galaxias.ala.org.au/reference/galaxias_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new galaxias project — galaxias_project","text":"","code":"galaxias_project(path, ...)  galaxias_package(path, ...)"},{"path":"https://galaxias.ala.org.au/reference/galaxias_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new galaxias project — galaxias_project","text":"path path. exists, used. exist, created, provided parent path exists. ... arguments passed usethis::create_project() usethis::create_package()","code":""},{"path":"https://galaxias.ala.org.au/reference/galaxias_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new galaxias project — galaxias_project","text":"return object workspace; called side-effect building new project package.","code":""},{"path":"https://galaxias.ala.org.au/reference/print_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Print objects returned by APIs — print_validation","title":"Print objects returned by APIs — print_validation","text":"Currently validate_archive() get_validator_report(), latter called former.","code":""},{"path":"https://galaxias.ala.org.au/reference/print_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print objects returned by APIs — print_validation","text":"","code":"# S3 method for class 'gbif_validator_post' print(x, ...)  # S3 method for class 'gbif_validator_response' print(x, n = 5, ...)"},{"path":"https://galaxias.ala.org.au/reference/print_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print objects returned by APIs — print_validation","text":"x object print. ... Additional arguments, currently ignored. n Number entries print","code":""},{"path":"https://galaxias.ala.org.au/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. corella suggest_workflow","code":""},{"path":"https://galaxias.ala.org.au/reference/use_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an example metadata statement — use_metadata","title":"Write an example metadata statement — use_metadata","text":"function takes metadata_example exports specified file. useful creating boilerplate metadata statement can edit .","code":""},{"path":"https://galaxias.ala.org.au/reference/use_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an example metadata statement — use_metadata","text":"","code":"use_metadata(file, overwrite = FALSE)"},{"path":"https://galaxias.ala.org.au/reference/use_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an example metadata statement — use_metadata","text":"file (string) filename save statement . Defaults \"metadata.md\". overwrite (logical) existing file name overwritten? Defaults FALSE.","code":""},{"path":"https://galaxias.ala.org.au/reference/use_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an example metadata statement — use_metadata","text":"return object workspace; called side-effect saving markdown file specified location.","code":""},{"path":"https://galaxias.ala.org.au/reference/validate_archive.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a Darwin Core Archive via API — validate_archive","title":"Validate a Darwin Core Archive via API — validate_archive","text":"Validation process checking whether specified archive ready sharing publication, according Darwin Core standard.","code":""},{"path":"https://galaxias.ala.org.au/reference/validate_archive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a Darwin Core Archive via API — validate_archive","text":"","code":"validate_archive(x = \"data\", provider = \"GBIF\")  get_validator_report(key)"},{"path":"https://galaxias.ala.org.au/reference/validate_archive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a Darwin Core Archive via API — validate_archive","text":"x (string) Either directory containing files stored archive, filename (ending .zip) specified archive. Defaults data folder within current working directory. provider (string) institution queried validation services. Currently \"GBIF\" supported. key unique identifier key GBIF","code":""},{"path":"https://galaxias.ala.org.au/reference/validate_archive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a Darwin Core Archive via API — validate_archive","text":"Invisibly returns tibble workspace containing validation results; primarily called side-effect generating report console.","code":""},{"path":[]},{"path":"https://galaxias.ala.org.au/news/index.html","id":"galaxias-010","dir":"Changelog","previous_headings":"","what":"galaxias 0.1.0","title":"galaxias 0.1.0","text":"First release version. hope like !","code":""}]
